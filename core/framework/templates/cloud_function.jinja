{% set FUNCTION_NAME = env['name'] + '-' + properties["nonce"]|string %}
{% set SERVICE_ACCOUNT_NAME = FUNCTION_NAME + "-sa" %}

resources:
- type: service_account.jinja
  name: {{ SERVICE_ACCOUNT_NAME }}
- type: gcp-types/cloudfunctions-v1:projects.locations.functions
  name: {{ FUNCTION_NAME }}
  properties:
    function: {{ FUNCTION_NAME }}
    parent: projects/{{ env['project'] }}/locations/{{ properties['region'] }}
    sourceUploadUrl: {{ properties['upload_url'] }}
    entryPoint: {{ properties['entry_point'] }}
    runtime: python312
    serviceAccountEmail: $(ref.{{ SERVICE_ACCOUNT_NAME }}.email)
    httpsTrigger: {{ '{}' }}
    {% if 'env_variables' in properties %}
    environmentVariables:
    {% for key, value in properties['env_variables'].items() %}
      "{{ key }}": "{{ value }}"
    {% endfor %}
    {% endif %}
{% if 'policyBindings' in properties %}
- name: {{ FUNCTION_NAME }}-iam
  action: gcp-types/cloudfunctions-v1:cloudfunctions.projects.locations.functions.setIamPolicy
  properties:
    resource: $(ref.{{ FUNCTION_NAME }}.name)
    policy: 
      bindings:
      {% for binding in properties['policyBindings'] %}
      - role: {{ binding['role'] }}
      {% if 'all_users' in binding and binding['all_users'] == 'allusers' %}
        members:
        - allUsers 
      {% elif 'user' in binding  %}
        members:
        - user: {{binding['user']}}
      {% elif 'service_account_id' in binding  %}
        members:
        - serviceAccount:$(ref.{{ binding['service_account_id'] }}.email)
      {% endif %}
      {% endfor %}
{% endif %}
